#!/bin/bash

echo "#include <cstring>" #We need string comparsion
echo "#include \"wx/wx.h\"" #We need some typedefs and more string comparsion
echo "#include \"../cpu.h\""  #We need the cpuConfig definition
echo ""

#Include available cpus
find * -maxdepth 0 -type d -print | tr " " "\n" | sed "s:.*:#include \"&/&.h\":"
echo ""

#Header guard
echo "#ifndef emulator_cpus_h"
echo "#define emulator_cpus_h"

#create define for cmdline argument table
echo -e "\n#define CPUS_CMDLINE_HELP \\"
find * -maxdepth 0 -type d -print | tr " " "\n" | sed "s:.*:&_CMDLINE_HELP \\\\:"
#echo -e "{ wxCMD_LINE_SWITCH, wxT(\"c\"), wxT(\"cpus\"), wxT(\"CPUS!\") },"
echo ""

#Null terminated list of available cpus (defined in generated cpp file)
echo "extern char* cpu_names[];"
echo ""

#Helper methods to find a device from it's coresponding cmdline arg
echo "inline bool findCpu(wxChar* arg) {"
find * -maxdepth 0 -type d -print | tr " " "\n" | sed "s:.*:    if (wxStrcmp(arg, _(\"--&\")) == 0) return true;:"
echo "    return false;"
echo "}"

echo "inline cpuConfig* createCpuConfig(int& argc, wxChar**& argv) {"
echo "    wxChar* arg = argv[0];"
echo "    argc--; argv++;"
find * -maxdepth 0 -type d -print | tr " " "\n" | sed "s:.*:    if (wxStrcmp(arg, _(\"--&\")) == 0) return new &Config(argc, argv);:"
echo "    argc++; argv--;"
echo "    return NULL;"
echo "}"
echo ""

#Helper methods to test devices
echo "inline bool runCpuTest(char* name) {"
find * -maxdepth 0 -type d -print | tr " " "\n" | sed "s:.*:    if (strcmp(name, \"&\") == 0) return &_runTest();:"
echo "    return false;"
echo "}"

echo ""
echo "#endif"
